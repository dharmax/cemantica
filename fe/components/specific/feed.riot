<feed>
    <h1>Activity</h1>
    <div if="{state.feed}" class="feed-item" each="{i in state.feed}">
        <div class="tooltip">
            <user id="{i.actorId}" pictureUrl="{i.actorPictureUrl}" name="{i.actorName}"
                  gender="{i.actorGender}"></user>
            <span>
            {operation(i)} <a href="{targetUrl(i)}" class="target">{i.targetName}</a> {relativeTime(i.time)}
            </span>
        </div>
        <span>
            aaa
            <a href="#writer/{i.actorId}">{i.actorName.substr(0,13)}</a>
            {' ' + operation(i)+ ' '}
            <a href="{targetUrl(i)}" class="target">{i.targetName.substr(0,22)}</a> {' '+relativeTime(i.time)}
        </span>
    </div>

    <script>

        import {feedStore} from "../../viewmodel/feed-store";
        import dispatcher from "../../lib/dispatcher";
        import {relativeTime} from "short-relative-time";

        import User from '../generic/user.riot'

        export default {
            components: {
                User
            },
            async onMounted() {
                this.update({feed: await feedStore.getFeed()})
                dispatcher.on('feed-store:updated', e => {
                    this.update({
                        feed: e.data
                    })
                })
            },
            targetUrl(i) {
                return `#${i.targetType.toLowerCase()}/${i.targetId}`
            },
            relativeTime(date) {
                return relativeTime(new Date(), new Date(date), true)
            },
            operation(i) {
                return {
                    'piece-created': 'wrote',
                    'whisperation-created': 'suggested a whisperation',
                    'piece-published': 'published',
                    'subscribed-to': 'now follows',
                    'rated': `gave score of ${i.extra} to`
                }[i.operation] || i.operation
            },
        }

    </script>

</feed>