<my-creations>
    <div class="container">
        <h1>{state.title}</h1>
        <div class="control" if="{mode!='drafts'}">
            Filter: <select name="filter" onchange="{changeFilter}">
                <option value="all">All</option>
                <option value="draft">Drafts</option>
                <option value="published">Public</option>
                <option value="limited">Limited</option>
                <option value="private">Private</option>
                <option value="hidden">Hidden</option>
            </select>
        </div>

        <section class="pieces">
            <wall-piece each="{p in state.pieces}" data="{p}" self="self"></wall-piece>
        </section>
        <section class="whisperations">
            <h2>Whisperations</h2>
            <span each="{ w in state.whisperations}">
                <whisperation data="{w}"></whisperation>
            </span>
        </section>
    </div>
    <script>

        import {pieceStore} from "../../viewmodel/piece-store";
        import WallPiece from './wall-piece.riot'
        import {stateManager} from "../../lib/state-manager";
        import dispatcher from "../../lib/dispatcher";
        import {whisperationStore} from "../../viewmodel/whisperations-store";
        import Whisperation from './whisperation.riot'

        export default {
            components: {
                WallPiece,
                Whisperation
            },
            async setFilter(filterName) {
                this.filterName = filterName
                let pieces = await pieceStore.getByWriter()
                const whisperations = await whisperationStore.getByWriter()
                pieces = pieces.filter(p => {
                    if (filterName === 'all')
                        return true
                    return p.status === filterName
                })
                this.update({
                    pieces,
                    whisperations
                })
            },


            onMounted() {
                dispatcher.on('state:changed', s => this.setupPage())
                this.setupPage()
            },
            setupPage() {
                this.mode = stateManager.getState().mode
                if (this.mode === 'drafts') {
                    this.update({title: 'My Drafts'})
                    this.setFilter('draft')
                } else {
                    this.update({title: 'My Creations'})
                    this.setFilter(this.props.status || 'all')
                }
            },

            changeFilter(e) {
                this.setFilter(e.target.value)
            }
        }
    </script>

</my-creations>