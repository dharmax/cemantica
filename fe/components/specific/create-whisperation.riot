<create-whisperation>
    <div if="{!isLoggedIn()}">
        <h2>Kindly login/sign-up in order to contribute
            a new whisperation...</h2>
    </div>
    <section class="creation">
        <div class="create-whisperation" if="{isLoggedIn()}">
            <h1>New Whisperation:</h1>

            <div class="items">
                <span each="{(item,i) in state.items}">
                    <input type="text" oninput="{(e)=>updateItem(i,e.target.value)}" value="{item}"
                           size="30" maxlength="29">
                    <a onclick="{()=>deleteItem(i)}"><i class="material-icons">delete_outline</i></a>
                    <br>
                </span>
                <input type="text" if="{!isFull()}" onchange="{append}" size="30" maxlength="29">

            </div>

            <div class="control">
                <button onclick="{()=>update({confirmSend:true})}">Submit</button>
                <button onclick="{cancel}">Cancel</button>
            </div>
        </div>

        <section class="preview">
            <h1>Preview:</h1>
            <whisperation data="{state}" role="preview"/>
        </section>

        <div class="help-div">
            <zippy title="help">
                <div class="help">
                    <div if="{state.helpPage==1}">
                        <strong>I</strong>n this page, you may propose a <b>whisperation</b> - a whisper of inspiration.
                        <br>
                        A <b>whisperation</b> is a short list of items (usually one to three but it could be a little
                        more).
                        Each item may be either a single word or a more-or-less specific thing (could be a short
                        description
                        of something).
                        <strong>E</strong>xample:

                        <p>
                            a three-items whisperation:
                        </p>
                        <ol class="whisperation-example">
                            <li>Glass</li>
                            <li>First days of spring</li>
                            <li>Years</li>
                        </ol>
                    </div>
                    <div if="{state.helpPage==2}">
                        Special items in a whisperation are:
                        <ol>
                            <li><b>Context</b>, e.g.: "Context: a dialog between old friends"</li>
                            <li><b>Rule</b> e.g. "Rule: must be 5 words in a line"></li>
                        </ol>
                        <p>
                            Note that a <b>whisperation</b> is pending approval and must be <u>English only</u>.
                        </p>
                    </div>
                    <div if="{state.helpPage==3}">
                        So what about our example?
                        <p></p>
                        <h3>The whisperation:</h3>
                        <ol class="whisperation-example">
                            <li>Glass</li>
                            <li>First days of spring</li>
                            <li>Years</li>
                        </ol>

                        <h3>A poem based on it:</h3>
                        <p class="piece-example">
                            It was the glistening of the sun <br>
                            Over my <b>glass</b> of cool water <br>
                            Which reminded me that winter has gone. [=first days of spring]<br>
                            As i carried my eyes over the green-green meadow <br>
                            i could almost hear <br>
                            The sounds of the <b>years</b> marching away.
                        </p>
                    </div>
                    <div class="control">
                        <button if="{state.helpPage>1}" onclick="{prevHelp}">Back</button>
                        <button if="{state.helpPage<3}" onclick="{nextHelp}">Next</button>
                    </div>
                </div>

            </zippy>
        </div>

    </section>

    <div if="{state.confirmSend}">
        <div class="modal-overlay"></div>
        <div class="lightbox">
            <div class="modal-overlay"></div>
            <div class="content">
                <div class="title">Confirm</div>
                <div class="body">
                    Are you ready to submit your Whisperation?
                    <br>
                    Make sure there are no grammar or spelling mistakes...
                </div>
                <div class="control">
                    <button onclick="{send}">Yes, submit!</button>
                    <button onclick="{()=>update({confirmSend:false})}">Not yet</button>
                </div>
            </div>
        </div>
    </div>
    <div if="{state.justSent}">
        <div class="modal-overlay"></div>
        <div class="lightbox">
            <div class="content">
                <div class="title">
                    Thank you!
                </div>
                <div class="body">
                    Your Whisperation was sent!
                    We appreciate your contribution!
                </div>
                <div class="control">
                    <button onclick="{postMore}">Post more</button>
                    <a href="#main">Home</a>
                </div>
            </div>
        </div>
    </div>
    <script>
        import {stateManager} from "../../lib/state-manager";
        import {whisperationStore} from "../../viewmodel/whisperations-store.ts";
        import Zippy from '../generic/zippy.riot'
        import {isLoggedIn} from "../../services/session-manager";
        import Whisperation from "./whisperation.riot"

        const ws = whisperationStore

        export default {
            isLoggedIn,
            components: {
                Zippy,
                Whisperation
            },
            onMounted() {
                this.update({
                    helpPage: localStorage.whisperationWritingHelp || 1,
                    items: []
                })
            },
            isFull() {
                return this.state.items && this.state.items.length >= 5 || false
            },
            async send() {
                await ws.create({items: this.state.items})
                this.update({
                    items: [],
                    justSent: true,
                    confirmSend: false
                })
            },
            deleteItem(index) {
                let items = this.state.items
                items.splice(index, 1)
                // note that i use this virtually redundant call,
                //  because it did work neither directly nor by
                //  creating a copy of the array.
                this.update({items: []})
                this.update({items})
            },
            updateItem(index, value) {
                const items = this.state.items
                items[index] = value
                this.update({items})
            },
            append(e) {
                const field = e.target
                this.update({
                    items: this.state.items.concat(field.value)
                })
                field.value = ''
            },
            postMore() {

                this.update({
                    items: [],
                    justSent: false
                })

            },
            cancel() {
                stateManager.state = 'main'
            },
            prevHelp() {
                this.update({helpPage: this.state.helpPage - 1 || 1})
            },
            nextHelp() {
                this.update({helpPage: this.state.helpPage + 1})
            }


        }
    </script>

</create-whisperation>