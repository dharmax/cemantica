<reset-password>

    <section class="reset-password form-section">
        <h1>Reset Password</h1>
        <form class="form" onsubmit="{passwordChange}" if="{!state.postReset}">
            <div>
                <input ref="password1" placeholder="password" type="password" minlength="6" maxlength="100">
                <input ref="password2" placeholder="password again" type="password">
            </div>
            <div>
                <button class="action password" onclick={passwordChange} type="button">Confirm</button>
            </div>
        </form>
        <button if="{state.postReset}" class="action"><a href="/"> Back to Login</a></button>
    </section>
    <toasters/>

    <script>

        import {getQueryParam} from "../../lib/utils";
        import {Alert} from "../../services/alert-service";
        import {hashPassword, post} from "../../lib/api-helper";
        import Toasters from './toasters.riot'

        export default {
            components: {
                Toasters
            },
            onMounted() {
            },
            async passwordChange() {
                const token = getQueryParam('token')
                const {password1, password2} = this.collectValues()
                if (password1 !== password2)
                    Alert('passwords must match')
                else {
                    const result = await post(`users/changePassword/${token}`, {
                        newPassword: await hashPassword(password1)
                    })
                    Alert('Password changed!', 'info')
                    this.update({postReset: true})
                }
            }
        }

    </script>
</reset-password>
